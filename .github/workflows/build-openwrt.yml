name: Build OpenWrt

on:
  push:
    branches:
      - openwrt-21.02
  pull_request:
    branches:
      - openwrt-21.02
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: openwrt-21.02

      - name: Show git config
        run: |
          git config --list
          git branch -a

      - name: Set up Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc binutils bzip2 flex python3 perl make grep unzip swig gawk subversion libz-dev libc-dev rsync libncurses5-dev libncursesw5-dev libpam0g-dev liblzma-dev libsnmp-dev libnetfilter-queue-dev liblzma-dev libpam0g-dev

      - name: Compile OpenWrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          make -j$(nproc)

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-build
          path: |
            bin/targets/rockchip/armv8/**
          if-no-files-found: error
          exclude: |
            bin/targets/rockchip/armv8/packages/**

      - name: Set Tag Prefix
        run: echo "TAG_PREFIX=${GITHUB_REF_NAME:0:7}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: openwrt-build-${{ env.TAG_PREFIX }}-${{ github.sha }}
          release_name: OpenWrt Build ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload config.buildinfo to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/config.buildinfo
          asset_name: config.buildinfo
          asset_content_type: text/plain

      - name: Upload feeds.buildinfo to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/feeds.buildinfo
          asset_name: feeds.buildinfo
          asset_content_type: text/plain

      - name: Upload ext4-sysupgrade.img.gz to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/openwrt-rockchip-armv8-xunlong_orangepi-r1-plus-lts-ext4-sysupgrade.img.gz
          asset_name: openwrt-rockchip-armv8-xunlong_orangepi-r1-plus-lts-ext4-sysupgrade.img.gz
          asset_content_type: application/gzip

      - name: Upload manifest to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/openwrt-rockchip-armv8-xunlong_orangepi-r1-plus-lts.manifest
          asset_name: openwrt-rockchip-armv8-xunlong_orangepi-r1-plus-lts.manifest
          asset_content_type: text/plain

      - name: Upload squashfs-sysupgrade.img.gz to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/openwrt-rockchip-armv8-xunlong_orangepi-r1-plus-lts-squashfs-sysupgrade.img.gz
          asset_name: openwrt-rockchip-armv8-xunlong_orangepi-r1-plus-lts-squashfs-sysupgrade.img.gz
          asset_content_type: application/gzip

      - name: Upload SDK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/openwrt-sdk-rockchip-armv8_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          asset_name: openwrt-sdk-rockchip-armv8_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          asset_content_type: application/x-xz

      - name: Upload sha256sums to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/sha256sums
          asset_name: sha256sums
          asset_content_type: text/plain

      - name: Upload version.buildinfo to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/targets/rockchip/armv8/version.buildinfo
          asset_name: version.buildinfo
          asset_content_type: text/plain
