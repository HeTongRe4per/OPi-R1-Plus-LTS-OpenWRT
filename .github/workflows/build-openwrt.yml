name: Build OpenWrt

on:
  push:
    branches:
      - openwrt-21.02
  pull_request:
    branches:
      - openwrt-21.02
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone submodules directly
        run: |
          git clone https://github.com/Zxilly/UA2F.git package/build-ext/UA2F
          git clone --branch openwrt-21.02 https://github.com/sbwml/autocore-arm.git package/build-ext/autocore-arm
          git clone https://github.com/CHN-beta/rkp-ipid.git package/build-ext/kmod-rkp-ipid
          git clone https://github.com/sirpdboy/luci-app-advancedplus.git package/build-ext/luci-app-advancedplus
          git clone https://github.com/BoringCat/luci-app-mentohust.git package/build-ext/luci-app-mentohust
          git clone https://github.com/sirpdboy/luci-app-netwizard.git package/build-ext/luci-app-netwizard
          git clone https://github.com/KFERMercer/luci-app-tcpdump.git package/build-ext/luci-app-tcpdump
          git clone https://github.com/lucikap/luci-app-ua2f.git package/build-ext/luci-app-ua2f
          git clone https://github.com/jerrykuku/luci-theme-argon.git package/build-ext/luci-theme-argon

      - name: Show git config
        run: |
          git config --list
          git branch -a

      - name: Set up Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc binutils bzip2 flex python3 perl make grep unzip swig gawk subversion libz-dev libc-dev rsync libncurses5-dev libncursesw5-dev libpam0g-dev liblzma-dev libsnmp-dev libnetfilter-queue-dev liblzma-dev libpam0g-dev

      - name: Modify CMakeLists.txt for UA2F
        run: |
          sed -i 's/set(CMAKE_C_STANDARD 17)/set(CMAKE_C_STANDARD 11)/' package/build-ext/UA2F/CMakeLists.txt

      - name: Compile OpenWrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          make -j$(nproc)

      - name: List files
        run: ls -alFh

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-build
          path: |
            bin/targets/rockchip/armv8/**
          if-no-files-found: error
          exclude: |
            bin/targets/rockchip/armv8/packages/**

      - name: Set Tag Prefix
        run: echo "TAG_PREFIX=${GITHUB_REF_NAME:0:7}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: openwrt-build-${{ env.TAG_PREFIX }}-${{ github.sha }}
          release_name: OpenWrt Build ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload files to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          find ./bin/targets/rockchip/armv8 -maxdepth 1 -type f | while read file; do
            gh release upload ${{ steps.create_release.outputs.id }} "$file" --clobber
          done
