name: Build OpenWrt

on:
  push:
    branches:
      - openwrt-21.02
  pull_request:
    branches:
      - openwrt-21.02
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'  # 当推送新的标签时触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: openwrt-21.02

      - name: Show git config
        run: |
          git config --list
          git branch -a

      - name: Set up Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc binutils bzip2 flex python3 perl make grep unzip swig gawk subversion libz-dev libc-dev rsync libncurses5-dev libncursesw5-dev libpam0g-dev liblzma-dev libsnmp-dev libnetfilter-queue-dev liblzma-dev libpam0g-dev

      - name: Compile OpenWrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          make -j$(nproc)

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-build
          path: |
            bin/targets/rockchip/armv8/**
          if-no-files-found: error
          exclude: |
            bin/targets/rockchip/armv8/packages/**

      - name: Set Tag Prefix
        run: echo "TAG_PREFIX=${GITHUB_REF_NAME:0:7}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: openwrt-build-${{ env.TAG_PREFIX }}-${{ github.sha }}
          release_name: OpenWrt Build ${{ github.run_number }}
          draft: false
          prerelease: false

  upload-release-assets:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload files to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        find ./bin/targets/rockchip/armv8 -maxdepth 1 -type f | while read file; do
          gh release upload ${{ steps.create_release.outputs.id }} "$file" --clobber
        done